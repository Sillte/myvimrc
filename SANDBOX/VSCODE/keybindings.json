// Place your key bindings in this file to override the defaults
[
  // Completion:
  {
    "key": "CTRL+N",
    "command": "editor.action.triggerSuggest",
    "when": "editorTextFocus && !suggestWidgetVisible && neovim.mode == 'insert'"
  },
  {
    "key": "CTRL+X CTRL+N",
    "command": "editor.action.triggerSuggest",
    "when": "editorTextFocus && !suggestWidgetVisible && neovim.mode == 'insert'"
  },
  {
    "key": "CTRL+X CTRL+Z",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "editorTextFocus && !inlineSuggestionVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+c",
    "command": "editor.action.inlineSuggest.hide",
    "when": "editorTextFocus && suggestWidgetVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+e",
    "command": "editor.action.inlineSuggest.hide",
    "when": "editorTextFocus && suggestWidgetVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.acceptSelectedSuggestion",
    "when": "editorTextFocus && suggestWidgetVisible && neovim.mode == 'insert'"
  },
  // Copilot completion
  {
    "key": "ALT+X",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "editorTextFocus && !inlineSuggestionVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ALT+N",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "editorTextFocus && !inlineSuggestionVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ALT+N",
    "command": "editor.action.inlineSuggest.showNext",
    "when": "editorTextFocus && inlineSuggestionVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ALT+P",
    "command": "editor.action.inlineSuggest.showPrevious",
    "when": "editorTextFocus && inlineSuggestionVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ALT+Y",
    "command": "editor.action.inlineSuggest.acceptNextWord",
    "when": "editorTextFocus && inlineSuggestionVisible && neovim.mode == 'insert'"
  },
  {
    "key": "ALT+E",
    "command": "editor.action.inlineSuggest.hide",
    "when": "editorTextFocus && inlineSuggestionVisible && neovim.mode == 'insert'"
  },
  {
    "key": "tab",
    "command": "editor.action.inlineSuggest.commit",
    "when": "editorTextFocus && inlineSuggestionVisible && inlineSuggestionHasIndentationLessThanTabSize && !editorTabMovesFocus"
  },
  {
    "key": "CTRL+C",
    "command": "editor.action.inlineSuggest.hide",
    "when": "editorTextFocus && inlineSuggestionVisible && neovim.mode == 'insert'"
  },
  // Window control
  {
    "key": "CTRL+SHIFT+V",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "CTRL+SHIFT+Z",
    "command": "workbench.action.toggleZenMode",
  },
  {
    "key": "CTRL+SHIFT+W CTRL+SHIFT+W",
    "command": "workbench.action.focusActiveEditorGroup",
  },
  {
    "key": "CTRL+SHIFT+W CTRL+SHIFT+H",
    "command": "workbench.action.moveSideBarRight",
  },
  {
    "key": "CTRL+SHIFT+W CTRL+SHIFT+L",
    "command": "workbench.action.moveSideBarLeft",
  },
  // Code action in VSCode Such as explanation of copilot.
  {
    "key": "ALT+A",
    "command": "editor.action.codeAction",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ALT+F",
    "command": "editor.action.formatDocument",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  // Code review commands: 
  {
    "key": "alt+k",
    "command": "chatEditor.action.navigatePrevious",
    "when": "chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused"
  },
  {
    "key": "alt+up",
    "command": "chatEditor.action.navigatePrevious",
    "when": "chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused"
  }, 
  {
    "key": "alt+j",
    "command": "chatEditor.action.navigateNext",
    "when": "chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused"
  },
  {
    "key": "alt+down",
    "command": "chatEditor.action.navigateNext",
    "when": "chatEdits.hasEditorModifications && chatIsEnabled && editorFocus || chatEdits.hasEditorModifications && chatIsEnabled && notebookCellListFocused"
  }, 
  {
    "key": "alt+d",
    "command": "chatEditor.action.toggleDiff",
    "when": "chatEdits.hasEditorModifications && editorFocus"
  },
  {
    "key": "alt+y",
    "command": "chatEditor.action.acceptHunk",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "alt+enter",
    "command": "chatEditor.action.accept",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "alt+e",
    "command": "chatEditor.action.undoHunk",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "alt+u",
    "command": "chatEditor.action.undoHunk",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "alt+c",
    "command": "chatEditor.action.undoHunk",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "ctrl+c",
    "command": "chatEditor.action.reject",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "ALT+SHIFT+U",
    "command": "chatEditing.discardAllFiles",
    "when": "hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress"
  },
  {
    "key": "ALT+SHIFT+enter",
    "command": "chatEditing.acceptAllFiles",
    "when": "hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  }
]
